{
	"info": {
		"_postman_id": "715dd757-c6f1-46e2-943d-d36cfac36236",
		"name": "Currency_Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "39564474"
	},
	"item": [
		{
			"name": "add_amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Amount - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"amount\": 50\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:5005/user/1/add_amount"
			},
			"response": []
		},
		{
			"name": "add_amount amount not valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Amount - Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Add Amount - Not valid amount\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"error\", 'bad_request');\r",
							"    pm.expect(jsonData).to.have.property(\"error_description\", 'Amount must be a valid number');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"amount\": \"cinquanta\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:5005/user/1/add_amount"
			},
			"response": []
		},
		{
			"name": "get_amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Amount - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Get Amount - Response contains user_id and amount\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"user_id\");\r",
							"    pm.expect(jsonData).to.have.property(\"amount\",50);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://localhost:5005/user/1/amount"
			},
			"response": []
		},
		{
			"name": "get_amount user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Amount - Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get Amount - User not found\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"error\", 'not_found');\r",
							"    pm.expect(jsonData).to.have.property(\"error_description\", 'User not found');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://localhost:5005/user/2/amount"
			},
			"response": []
		},
		{
			"name": "sub_amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sub Amount - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"amount\": 50\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:5005/user/1/sub_amount"
			},
			"response": []
		},
		{
			"name": "sub_amount insufficient balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sub Amount - Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Sub Amount -Insufficient balance\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"error\", 'bad_request');\r",
							"    pm.expect(jsonData).to.have.property(\"error_description\", 'Insufficient balance');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"amount\": 100\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:5005/user/1/sub_amount"
			},
			"response": []
		},
		{
			"name": "get_amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Amount - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Get Amount - Response contains user_id and amount\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"user_id\");\r",
							"    pm.expect(jsonData).to.have.property(\"amount\",0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://localhost:5005/user/1/amount"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "old_balance",
			"value": "0"
		}
	]
}