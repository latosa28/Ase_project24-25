{
	"info": {
		"_postman_id": "870f30ad-4bc2-43d7-b704-b3ef05839d43",
		"name": "Auth_Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "39564474"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login User - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Login User - Response contains access_token\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('access_token');\r",
							"    \r",
							"    if (responseJson.access_token) {\r",
							"        pm.collectionVariables.set(\"jwt_token\", responseJson.access_token);\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"test_user\",\r\n    \"password\": \"password123\",\r\n    \"grant_type\": \"password\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:5011/user/auth"
			},
			"response": []
		},
		{
			"name": "login missing credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login User - Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Login User - Missing mandatory fields\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property('error','invalid_request');\r",
							"    pm.expect(responseJson).to.have.property('error_description','Missing password field')\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"test_user\",\r\n    \"grant_type\": \"password\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:5011/user/auth"
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Info - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User Info - User info are correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('email','test_user@example.com');\r",
							"    pm.expect(jsonData).to.have.property('username','test_user');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{jwt_token}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": "https://localhost:5011/userinfo"
			},
			"response": []
		},
		{
			"name": "user_info missing token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Info - Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"User Info - Missing token\", function () {\r",
							"   const jsonData = pm.response.json();\r",
							"   pm.expect(jsonData).to.have.property('error','invalid_request');\r",
							"   pm.expect(jsonData).to.have.property('error_description','Missing token');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://localhost:5011/userinfo"
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logut User - Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Logut User - Successfully logged out\", function () {\r",
							"   const jsonData = pm.response.json();\r",
							"   pm.expect(jsonData).to.have.property('message','Successfully logged out');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{jwt_token}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": "https://localhost:5011/user/1/auth"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "jwt_token",
			"value": ""
		}
	]
}