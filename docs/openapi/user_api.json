{
  "openapi": "3.0.1",
  "info": {
    "title": "User Services API",
    "description": "API for user management, authentication, collections, currency, and market.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5001",
      "description": "Local API Gateway"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "description": "User creation data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid data"
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "summary": "Get user details by ID",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user to retrieve details for",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "Username of the user"
                    },
                    "email": {
                      "type": "string",
                      "description": "Email address of the user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing user by ID",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/auth": {
      "post": {
        "summary": "Authenticate user and generate a JWT token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "description": "User authentication data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing username or password"
          },
          "401": {
            "description": "Invalid password"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{user_id}/auth": {
      "delete": {
        "summary": "Logout user",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user to logout",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        }
      }
    },
    "/user/{user_id}/collection": {
      "get": {
        "summary": "Get all items in the collection",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "rarity": {
                        "type": "string"
                      },
                      "image_path": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user/{user_id}/item/{item_id}": {
      "get": {
        "summary": "Get a specific item by its ID",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user requesting the item",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "description": "ID of the item to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_id": {
                      "type": "integer",
                      "description": "ID of the item"
                    },
                    "rarity": {
                      "type": "string",
                      "description": "Rarity level of the item"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the item"
                    },
                    "image_path": {
                      "type": "string",
                      "description": "Path to the image of the item"
                    },
                    "description": {
                      "type": "string",
                      "description": "Additional details about the item"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{user_id}/instance/{instance_id}": {
      "get": {
        "summary": "Get information about a specific item instance in a user's collection",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user who owns the item instance",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "description": "ID of the item instance to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the user's item instance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance_id": {
                      "type": "integer",
                      "description": "Unique identifier of the item instance"
                    },
                    "item_id": {
                      "type": "integer",
                      "description": "ID of the item type"
                    },
                    "rarity": {
                      "type": "string",
                      "description": "Rarity level of the item"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the item"
                    },
                    "image_path": {
                      "type": "string",
                      "description": "URL path to the item's image"
                    },
                    "date_roll": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date when the item was acquired or rolled"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Item instance not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item instance not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{user_id}/mycollection": {
      "get": {
        "summary": "Get a user's collection",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "instance_id": {
                        "type": "integer"
                      },
                      "item_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "rarity": {
                        "type": "string"
                      },
                      "image_path": {
                        "type": "string"
                      },
                      "date_roll": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/user/{user_id}/roll": {
      "put": {
        "summary": "Roll for a new gacha item",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New item rolled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance_id": {
                      "type": "integer"
                    },
                    "item_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "rarity": {
                      "type": "string"
                    },
                    "image_path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error during roll"
          },
          "404": {
            "description": "No items available for gacha"
          }
        }
      }
    },
    "/user/{user_id}/amount": {
      "get": {
        "summary": "Get user's currency balance",
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's currency balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    },
                    "amount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{user_id}/market_list": {
      "get": {
        "summary": "Get the list of open markets",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of open markets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "market_id": {
                        "type": "integer"
                      },
                      "item_id": {
                        "type": "integer"
                      },
                      "bid": {
                        "type": "number"
                      },
                      "seller_user_id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{user_id}/transactions_history": {
      "get": {
        "summary": "Retrieve the transaction history of a user",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transaction_id": {
                        "type": "integer"
                      },
                      "item_id": {
                        "type": "integer"
                      },
                      "seller_user_id": {
                        "type": "integer"
                      },
                      "buyer_user_id": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string"
                      },
                      "start_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "end_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "bid": {
                        "type": "number"
                      },
                      "final_price": {
                        "type": "number"
                      },
                      "instance_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{user_id}/instance/{instance_id}/auction": {
      "put": {
        "summary": "Create a new auction for an item instance",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user creating the auction",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "description": "ID of the item instance to be auctioned",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Data required to create the auction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "end_date": {
                    "type": "string",
                    "description": "Auction end date in `dd/mm/YYYY HH:MM` format"
                  },
                  "start_bid": {
                    "type": "number",
                    "description": "Initial bid amount, must be a positive number"
                  }
                },
                "required": [
                  "end_date",
                  "start_bid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auction_id": {
                      "type": "integer"
                    },
                    "instance_id": {
                      "type": "integer"
                    },
                    "seller_user_id": {
                      "type": "integer"
                    },
                    "start_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    },
                    "bid": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input or auction already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "end_date and start_bid are mandatory"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized or invalid item instance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized or invalid instance"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{user_id}/market/{market_id}/bid": {
      "put": {
        "summary": "Place a bid on an item in the market",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user placing the bid",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "market_id",
            "in": "path",
            "required": true,
            "description": "ID of the market item",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Bid data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bid_amount": {
                    "type": "number"
                  }
                },
                "required": [
                  "bid_amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bid placed successfully"
          },
          "400": {
            "description": "Invalid bid or auction expired"
          },
          "403": {
            "description": "Cannot bid on own auction"
          },
          "404": {
            "description": "Auction not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{user_id}/payment": {
      "post": {
        "summary": "Make a payment to buy currency",
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user making the payment",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "card_number",
                  "card_expiry",
                  "card_cvc",
                  "amount"
                ],
                "properties": {
                  "card_number": {
                    "type": "string",
                    "description": "Credit card number"
                  },
                  "card_expiry": {
                    "type": "string",
                    "description": "Expiry date of the credit card in MM/YY format"
                  },
                  "card_cvc": {
                    "type": "string",
                    "description": "CVC code of the credit card"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Amount to pay in standard currency"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Payment successful"
                    },
                    "amount_paid": {
                      "type": "number",
                      "format": "float",
                      "description": "Amount paid in standard currency"
                    },
                    "currency_received": {
                      "type": "number",
                      "format": "float",
                      "description": "Amount of special currency received"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Payment failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Payment failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}