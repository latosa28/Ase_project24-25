version: '3.8'

services:
  # Microservice for account (test version)
  account_test:
    build:
      context: .
      dockerfile: ./account/Dockerfile
    container_name: account_test
    ports:  # Port binding
      - "5003:5003"  # Expose container port 5003 on host port 5003
    environment:
      - FLASK_ENV=testing
      - DB_HOST=account_db
      - DB_PORT=3306
      - DB_NAME=${DB_ACCOUNT_NAME}
      - DB_USER=${DB_ACCOUNT_USER}
      - REDIS_HOST=redis
    secrets:
      - db_account_password
      - account_cert
      - account_key
      - mysql_ca_cert
      - account_db_cert
      - account_db_key
    depends_on:
      account_db:
        condition: service_healthy  # Ensure the database starts before the service

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - "6379:6379"

  # MySQL for the account microservice
  account_db:
    image: mysql:8
    container_name: account_db
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
      - MYSQL_DATABASE=${DB_ACCOUNT_NAME}
      - MYSQL_USER=${DB_ACCOUNT_USER}
      - MYSQL_PASSWORD_FILE=/run/secrets/db_account_password
    command: --ssl-ca=/run/secrets/mysql_ca_cert --ssl-cert=/run/secrets/account_db_cert --ssl-key=/run/secrets/account_db_key
    secrets:
      - db_account_password
      - mysql_ca_cert
      - account_db_cert
      - account_db_key
      - db_root_password
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - test_account_db_:/var/lib/mysql
      - ./account/db/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  test_account_db_:  # Explicitly define the named volume

secrets:
  # DB Password secrets
  db_account_password:
    file: ./secrets/account/db_password.txt
  db_root_password:
    file: ./secrets/mysql/db_password.txt

  # Microservices certificates
  account_cert:
    file: ./secrets/account/cert.pem
  account_key:
    file: ./secrets/account/key.pem

  mysql_ca_cert:
    file: ./secrets/mysql/mysql_ca_cert.pem
  account_db_cert:
    file: ./secrets/account/db_cert.pem
  account_db_key:
    file: ./secrets/account/db_key.pem
